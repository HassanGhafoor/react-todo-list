name: CI/CD Workflow  # Naming the workflow

on:                   # Selecting the trigger
  push:
    branches: master  # Run the workflow when there's a push to the master branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Checkout the code from the repository

      - name: Set up Node.js
        uses: actions/setup-node@v2  # Set up the Node.js environment
        with:
          node-version: '18'  # Specify Node.js version 16

      - name: Install dependencies
        run: npm install  # Install dependencies (this will create package-lock.json if not present)

      - name: Build the application
        run: npm run build  # Run the build script defined in your package.json

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Using secrets for access key
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # Using secrets for secret key
          aws-region: ${{ vars.AWS_REGION }}  # Set your AWS region

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true  # Install Docker Buildx

      - name: Configure AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1  # Log in to Amazon ECR

      - name: Extract Commit ID
        run: echo "COMMIT_ID=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV  # Extract and store the short commit ID

      - name: Build Docker Image
        run: docker build -t ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }}:${{ env.COMMIT_ID }} .  # Build the Docker image with commit ID as the tag

      - name: Print Environment Variables
        run: |
          echo "ECR Registry: ${{ vars.ECR_REGISTRY }}"
          echo "ECR Repository: ${{ vars.ECR_REPOSITORY }}"
          echo "Commit ID: ${{ env.COMMIT_ID }}"

      - name: Build Docker Image
        run: docker build -t ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }}:${{ env.COMMIT_ID }} .  # Build the Docker image with commit ID as the tag

      - name: Push Docker image to ECR
        run: docker push ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }}:${{ env.COMMIT_ID }}  # Push the Docker image to ECR
